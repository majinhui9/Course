webpackJsonp([6],{"i+/p":function(s,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var e={data:function(){return{showMenu:!1}},created:function(){this.$nextTick(function(){for(var s=document.querySelectorAll("h1, h2"),a=document.querySelector("#itemMenu"),t="",e=0;e<s.length;e++){var r=s[e];r.setAttribute("id",r.innerText),r.innerHTML=r.innerText+'<a href="#" name="'+r.innerText+'"></a>',t+='<a href="#'+r.innerText+'">'+r.innerText+"</a>"}a.innerHTML=t})}},r={render:function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("section",[t("h1",[s._v("介绍")]),s._v(" "),s._m(0),s._v(" "),t("h1",[s._v("起步 - Hello Vue")]),s._v(" "),s._m(1),s._v(" "),s._m(2),s._v(" "),t("h2",[s._v("Vue实例")]),s._v(" "),s._m(3),s._v(" "),s._m(4),s._v(" "),t("h2",[s._v("数据绑定")]),s._v(" "),s._m(5),s._v(" "),s._m(6),s._v(" "),t("h2",[s._v("双向数据绑定")]),s._v(" "),s._m(7),s._v(" "),s._m(8),s._v(" "),s._m(9),s._v(" "),s._m(10),s._v(" "),s._m(11),s._v(" "),t("h2",[s._v("Vue双向绑定的极简实现")]),s._v(" "),s._m(12),s._v(" "),t("h2",[s._v("动态添加数据")]),s._v(" "),s._m(13),s._v(" "),s._m(14),s._v(" "),s._m(15),s._v(" "),t("h2",[s._v("异步DOM更新")]),s._v(" "),s._m(16),s._v(" "),s._m(17),s._v(" "),t("h2",[s._v("指令")]),s._v(" "),s._m(18),s._v(" "),s._m(19),s._v(" "),t("h2",[s._v("样式处理 -class和style")]),s._v(" "),t("p",[s._v('使用方式：v-bind:class="expression" or :class="expression"\n表达式的类型：字符串、数组、对象')]),s._v(" "),s._m(20),s._v(" "),t("h2",[s._v("监视数据变化 - watch")]),s._v(" "),t("p",[s._v("watch是一个对象，键是需要观察的表达式，值是对应回调函数\n当表达式的值发生变化后，会调用对应的回调函数完成响应的监视操作")]),s._v(" "),s._m(21),s._v(" "),t("h2",[s._v("计算属性 -computed")]),s._v(" "),t("p",[s._v("计算属性是基于它们的依赖进行缓存的，只有在它的依赖发生改变时才会重新求值\n注意：Mustache语法（{{}}）中不要放入太多的逻辑，否则会让模板过重、难以理解和维护, computed中的属性不能与data中的属性同名，否则会报错")]),s._v(" "),s._m(22),s._v(" "),s._m(23),s._v(" "),t("p",[s._v("对比一：")]),s._v(" "),s._m(24),s._v(" "),t("p",[s._v("对比二：")]),s._v(" "),s._m(25),s._v(" "),t("p",[s._v("对比三：")]),s._v(" "),s._m(26),s._v(" "),[t("div",[t("div",{directives:[{name:"show",rawName:"v-show",value:s.showMenu,expression:"showMenu"}],attrs:{id:"itemMenu"},on:{mouseleave:function(a){s.showMenu=!s.showMenu}}}),s._v(" "),t("p",[t("Icon",{staticStyle:{position:"fixed",right:"30px",top:"90px","font-size":"30px",cursor:"pointer"},attrs:{type:"md-menu"},on:{click:function(a){s.showMenu=!s.showMenu}}})],1)])]],2)},staticRenderFns:[function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("code",{pre:!0},[this._v("Vue")]),this._v(" (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，"),a("code",{pre:!0},[this._v("Vue")]),this._v(" 被设计为可以自底向上逐层应用。"),a("code",{pre:!0},[this._v("Vue")]),this._v(" 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("安装："),a("code",{pre:!0},[this._v("npm i -S vue")])]),this._v(" "),a("br")])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 指定vue管理内容区域，需要通过vue展示的内容都要放到找个元素中  通常我们也把它叫做边界 数据只在边界内部解析--\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"app"')]),s._v(">")]),s._v("{{ msg }}"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 引入 vue.js --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("src")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"vue.js"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"undefined"}}),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 使用 vue --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"actionscript"}},[s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" vm = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Vue({\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// el：提供一个在页面上已存在的 DOM 元素作为 Vue 实例的挂载目标")]),s._v("\n    el: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'#app'")]),s._v(",\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Vue 实例的数据对象，用于给 View 提供数据")]),s._v("\n    data: {\n      msg: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Hello Vue'")]),s._v("\n    }\n  })\n")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("ul",[a("li",[this._v("注意 1：先在data中声明数据，再使用数据")]),this._v(" "),a("li",[this._v("注意 2：可以通过 "),a("code",{pre:!0},[this._v("vm.$data")]),this._v(" 访问到data中的所有属性，或者 "),a("code",{pre:!0},[this._v("vm.msg")])])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" vm = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Vue({\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("data")]),s._v(": {\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("msg")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'大家好，...'")]),s._v("\n  }\n})\n\nvm.$data.msg === vm.msg "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ul",[t("li",[s._v("最常用的方式："),t("code",{pre:!0},[s._v("Mustache")]),s._v("(插值语法)，也就是 "),t("code",{pre:!0},[s._v("{{}}")]),s._v(" 语法")]),s._v(" "),t("li",[s._v("解释："),t("code",{pre:!0},[s._v("{{}}")]),s._v("从数据对象data中获取数据")]),s._v(" "),t("li",[s._v("说明：数据对象的属性值发生了改变，插值处的内容都会更新")]),s._v(" "),t("li",[s._v("说明："),t("code",{pre:!0},[s._v("{{}}")]),s._v("中只能出现JavaScript表达式 而不能解析js语句")]),s._v(" "),t("li",[s._v("注意："),t("code",{pre:!0},[s._v("Mustache")]),s._v(" 语法不能作用在 HTML 元素的属性上")])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("h1")]),s._v(">")]),s._v("Hello, {{ msg }}."),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("h1")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("{{ 1 + 2 }}"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("{{ isOk ? 'yes': 'no' }}"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- ！！！错误示范！！！ --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("h1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("title")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"{{ err }}"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("h1")]),s._v(">")]),s._v("\n")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("blockquote",[a("p",[this._v("双向数据绑定：将DOM与Vue实例的data数据绑定到一起，彼此之间相互影响")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("ul",[a("li",[this._v("数据的改变会引起DOM的改变")]),this._v(" "),a("li",[this._v("DOM的改变也会引起数据的变化")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("blockquote",[a("p",[this._v("原理："),a("code",{pre:!0},[this._v("Object.defineProperty")]),this._v("中的"),a("code",{pre:!0},[this._v("get")]),this._v("和"),a("code",{pre:!0},[this._v("set")]),this._v("方法")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("ul",[a("li",[a("code",{pre:!0},[this._v("getter")]),this._v("和"),a("code",{pre:!0},[this._v("setter")]),this._v("：访问器")]),this._v(" "),a("li",[this._v("作用：指定读取或设置对象属性值的时候，执行的操作")])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/*  defineProperty语法 介绍 */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" obj = {}\n"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v(".defineProperty(obj, "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'msg'")]),s._v(", {\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// 设置 obj.msg = "1" 时set方法会被系统调用 参数分别是设置后和设置前的值')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("set")]),s._v(": function (newVal, oldVal) {  },\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 读取 obj.msg 时get方法会被系统调用")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(": function ( newVal, oldVal ) {}\n})\n")])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 示例 --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"txt"')]),s._v(" />")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("span")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"sp"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("span")]),s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"javascript"}},[s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" txt = "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'txt'")]),s._v("),\n    sp = "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'sp'")]),s._v("),\n    obj = {}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 给对象obj添加msg属性，并设置setter访问器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v(".defineProperty(obj, "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'msg'")]),s._v(", {\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 设置 obj.msg  当obj.msg反生改变时set方法将会被调用  ")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("set")]),s._v(": function (newVal) {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 当obj.msg被赋值时 同时设置给 input/span")]),s._v("\n    txt.value = newVal\n    sp.innerText = newVal\n  }\n})\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 监听文本框的改变 当文本框输入内容时 改变obj.msg")]),s._v("\ntxt.addEventListener("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'keyup'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("event")]),s._v(") ")]),s._v("{\n  obj.msg = event.target.value\n})\n")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("注意：")])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ul",[t("li",[s._v("只有data中的数据才是响应式的，动态添加进来的数据默认为非响应式")]),s._v(" "),t("li",[s._v("可以通过以下方式实现动态添加数据的响应式\n"),t("ul",[t("li",[t("code",{pre:!0},[s._v("Vue.set(object, key, value)")]),s._v(" - 适用于添加单个属性")]),s._v(" "),t("li",[t("code",{pre:!0},[s._v("Object.assign()")]),s._v(" - 适用于添加多个属性")])])])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" vm = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Vue({\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("data")]),s._v(": {\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("stu")]),s._v(": {\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'jack'")]),s._v(",\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("age")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("19")]),s._v("\n    }\n  }\n})\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Vue.set */")]),s._v("\nVue.set(vm.stu, "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'gender'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'male'")]),s._v(")\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Object.assign 将参数中的所有对象属性和值 合并到第一个参数 并返回合并后的对象*/")]),s._v("\nvm.stu = "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v(".assign({}, vm.stu, { "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("gender")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'female'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("height")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("180")]),s._v(" })\n")])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ul",[t("li",[s._v("说明：Vue 异步执行 DOM 更新，监视所有数据改变，一次性更新DOM")]),s._v(" "),t("li",[s._v("优势：可以去除重复数据，对于避免不必要的计算和 避免重复 DOM 操作上，非常重要")]),s._v(" "),t("li",[s._v("如果需要那到更新后dom中的数据 则需要通过 "),t("code",{pre:!0},[s._v("Vue.nextTick(callback)")]),s._v("：在DOM更新后，执行某个操作（属于DOM操作）,实例调用"),t("code",{pre:!0},[s._v("vm.$nextTick(function () {})")])])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("methods: {\n  fn() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".msg = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'change'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".$nextTick("),t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n      "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'$nextTick中打印：'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".$el.children["),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].innerText);\n    })\n    "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'直接打印：'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".$el.children["),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].innerText);\n  }\n}\n")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("在 Vue 中，如果单单使用 "),a("code",{pre:!0},[this._v("{{}}")]),this._v(" 这种插值表达式，是满足不了我们对数据的操作欲望的。所以，Vue 以 "),a("code",{pre:!0},[this._v("v-if")]),this._v("、"),a("code",{pre:!0},[this._v("v-bind")]),this._v(" 等形式，提供了一些对于页面 + 数据的更为方便的操作：指令, 当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM")])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- \n    1. v-text\n    这里直接将 vTextOrHtml 中的文本\n    当成 string 渲染到页面中去\n   --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-text")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'vTextOrHtml'")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("br")]),s._v("/>")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- \n    2. v-html\n    这里在渲染 vTextOrHtml 的过程中，\n    如果遇到标签，则对标签页进行渲染 \n   --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-html")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'vTextOrHtml'")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("br")]),s._v("/>")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- \n    3. v-if/v-else-if/v-if\n    判断 data 中 vIf 的值是多少，\n    这里有三种情况：v-if、v-else-if、v-else。\n    如果项目中有更多情况，则再添加 v-else-if 即可\n  --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-if")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'vIf == 1'")]),s._v(">")]),s._v("Hello v-If"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-else-if")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'vIf == 2'")]),s._v(">")]),s._v("Hello v-else-if"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-else")]),s._v(">")]),s._v("Hello v-else"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("br")]),s._v("/>")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- \n    4. v-show\n    判断 isTrue 是真还是假，\n    它不同于 v-if 的方面是：\n    v-if 根据表达式的值的真假条件，销毁或重建元素\n    v-show 根据表达式之真假值，切换元素的 display CSS 属性\n    一般来说，v-if 有更高的切换开销，而 v-show 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 v-show 较好；如果在运行时条件很少改变，则使用 v-if 较好。\n  --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-show")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'isTrue'")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("br")]),s._v("/>")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('\x3c!-- \n    5. v-bind\n    v-bind 有两种格式：\n    1. v-bind:value - 全写\n    2. :value - 简写\n    我们还可以通过 v-bind:class 来动态赋值\n    v-bind:other1="other1" 在页面中显示就是：\n    <input other1="other1" />>\n   --\x3e')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-bind:value")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"vBind"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-bind:class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"colorRed"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"text"')]),s._v("/>")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-bind:other1")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"other1"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v(":other2")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"other2"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v(":other3")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("\" 'other3' \"")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Hello :属性值"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"text"')]),s._v("/>")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("br")]),s._v("/>")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("br")]),s._v("/>")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('\x3c!-- \n    6. v-on\n    v-on:click 有两种格式：\n    1. v-on:click - 全写\n    2. @click - 简写\n    v-on:click 除了可以直接在里面写表达式，还可以填写方法\n\n    事件修饰符\n      .stop - 阻止事件冒泡。例如：@click.stop="say" 阻止 say 方法传递到上一级 DOM。\n      .prevent - 阻止默认事件。例如：@click.prevent="say"，阻止点击事件，然后执行 say。\n      .capture - 给元素添加监听器，在一个 HTML 模块中，如果有 4 层嵌套，前 2 层使用了 .capture 修饰符，第 3/4 层未使用，点击第 4 层触发点击事件，则顺序为：1 -> 2 -> 4 -> 3，因为 .capture 会先触发。\n      .self - 只触发该 DOM 本身的事件。相比于 .stop 阻止事件冒泡，.self 忽略事件冒泡和捕获的影响。\n      .once - 事件将只会触发一次。例如：@click.once=\'doOnce\'，doOnce 只会执行一次。\n      .passive - 不要阻止事件的默认行为。例如：v-on:scroll.passive="onScroll"，在进行滚动的时候同时执行 onScroll，而不是等 onScroll 执行完再滚动。\n\n      按键值修饰符 在监听键盘事件时，允许为 v-on 在监听键盘事件时添加关键修饰符\n\n\n   --\x3e')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("button")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-on:click")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("\" vBind= 'Hello v-on:click' \"")]),s._v(">")]),s._v("v-on:click - 点击直接改变 vBind 的值"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("button")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("br")]),s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("button")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("@click.stop")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"changevBindValue"')]),s._v(">")]),s._v("v-on:click - 点击通过事件改变 vBind 的值，阻止冒泡"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("button")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("br")]),s._v(">")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 只有在 keyCode 是 13 时调用 vm.submit() --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("@keyup.13")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"submit"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 使用全局按键别名 --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("@keyup.enter")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"add"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("br")]),s._v("/>")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- \n    7. v-model\n    v-model 是双向数据绑定，\n    在这里，上面 input 的修改\n    会影响到下面 p 显示的内容\n   --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-model")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"vModel"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"text"')]),s._v(" />")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("{{ vModel }}"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("p")]),s._v(">")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("br")]),s._v("/>")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- \n    8. v-for\n    v-for 循环体遍历输出\n\n    使用 v-for 的时候提供 key 属性，以获得性能提升。\n    使用 key，VUE会基于 key 的变化重新排列元素顺序，并且会移除 key 不存在的元素。\n    key值不能重复，必须为字符串\n   --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("ul")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-for")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"(item, index) in vFor"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v(":class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"item.classStyle"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v(":key")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"index"')]),s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("li")]),s._v(">")]),s._v("{{index+1}}. {{item.name}} - {{item.age}}"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("li")]),s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("ul")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- \n    9. v-pre\n    vue会跳过这个元素和它的子元素的编译过程。可以用来显示原始 Mustache 标签。跳过大量没有指令的节点会加快编译。\n  --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("span")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-pre")]),s._v(">")]),s._v("{{ this will not be compiled }}"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("span")]),s._v(">")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- \n    10. v-once\n    vue只渲染元素和组件一次。随后的重新渲染，元素/组件及其所有的子节点将被视为静态内容并跳过。这可以用于优化更新性能。\n  --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("span")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-once")]),s._v(">")]),s._v("This will never change: {{msg}}"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("span")]),s._v(">")]),s._v("\n\n")])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- class --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 1 --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-bind:class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"{ active: true }"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v(" ===> 解析后\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"active"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 2 --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v(":class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("\"['active', 'text-danger', isTrue? 'class1': 'class2']\"")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v(" ===>解析后\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"active text-danger"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 3 --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-bind:class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"[{ active: true }, errorClass]"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v(" ===>解析后\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"active text-danger"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- style --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 1 --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-bind:style")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("\"{ color: activeColor, 'font-size': fontSize + 'px', color: isTrue? 'red': 'blue' }\"")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 2 将多个 样式对象 应用到一个元素上--\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- baseStyles 和 overridingStyles 都是data中定义的对象 --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("v-bind:style")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"[baseStyles, overridingStyles]"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n")])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("  watch: {\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("val, oldVal")]),s._v(") ")]),s._v("{\n      "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// val 表示当前值")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// oldVal 表示旧值")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'当前值为：'")]),s._v(" + val, "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'旧值为：'")]),s._v(" + oldVal)\n    },\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 监听对象属性的变化")]),s._v("\n    b: {\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("handler")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("val, oldVal")]),s._v(") ")]),s._v("{ "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* ... */")]),s._v(" },\n      "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// deep : true表示是否监听对象内部属性值的变化 ")]),s._v("\n      deep: "),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("\n    },\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 只监视user对象中age属性的变化")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'user.age'")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("val, oldVal")]),s._v(") ")]),s._v("{\n    },\n  }\n")])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("  computed: {\n    fullname() {\n      "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".firstname + "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'.'")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".lastname\n    }\n  }\n")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("watch 与 computed")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("ul",[a("li",[this._v("computed 强调计算。例如 c = a + b，因为你只要显示 c，所以不需要理会 a 与 b 的值是否动态传入，只需要使用 computed 监察 c 即可。")]),this._v(" "),a("li",[this._v("watch 属性强调自身值的变化前后的动作。如果需要完成 c = a + b，那么你需要 watch 数据 a 与 b 的变化，在这两者变化的时候，在方法中执行 c = a + b。")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("ul",[a("li",[this._v("watch 在处理异步操作或者开销较大的操作上有优势。执行异步操作不能串行返回结果、执行开销较大的操作避免堵塞主线程的时候，使用 watch。")]),this._v(" "),a("li",[this._v("简单且串行返回的，使用 computed。")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("ul",[a("li",[this._v("computed 对绑定的值有依赖，如果每次操作的值不变化，则不进行计算，具有缓存特性。")]),this._v(" "),a("li",[this._v("watch 会侦听前后变化的状态，无论操作的值是否变化，都会执行定义的函数体，所以会有 data(newVal, oldVal)。")])])}]},n=t("VU/8")(e,r,!1,null,null,null);a.default=n.exports},ux90:function(s,a,t){s.exports=t("i+/p")}});